#!/bin/bash


# Paths
init_path=$(pwd)
base_path="$(realpath $(dirname "$(test -L "$0" && readlink "$0" || echo "$0")"))"
paths=(
    bash_path="$base_path/bashrc.d"
    bin_path="$base_path/bin"
    php_path="$base_path/php"
    script_path="$base_path/script"
    services_path="$base_path/services"
    temp_path="$base_path/temp"
    web_path="$base_path/web"
)
for path in "${paths[@]}"; do eval $path; sudo mkdir -p "${path[@]:$(echo `expr index "$path" =`)}"; done


# Variables
client=$(whoami)
is_root=$([ "$client" == "root" ] && echo 1 || echo )
fcmd="$(basename $0)"
command=${@:1:1}
namespace="${command:2:`expr index "${command:2}" -`-1}"
params=(${@:2})

# Functions
function void {
    echo "" >> /dev/null
}
function delete {
    sudo rm -rf $@
}
function link {
    sudo ln -s $@
}
function path_go {
    [[ ! -z $2 ]] && from=$2 || from=$(pwd)
    echo $(realpath --relative-to=$from $1)
}
function confirm {
    local opt="n"
    local result=
    [[ ! -z $2 ]] && opt=$2
    read -p "$1 [$opt]: " result
    [[ -z $result ]] && result=$opt
    case $result in
        1|Y|S|y|s) echo 1 ;;
        *) echo "" ;;
    esac
}
function prompt {
    if [[ -z $2 ]]; then
        local str="$1"
    else
        local str="$1 [$2]: "
        local opt=$2
    fi
    read -p "$str" answer
    [[ -z $answer ]] && echo $opt || echo $answer
}
function add_bin {
    echo $(sudo rm -rf $bin_path/$1)
    echo $(sudo ln -s $2 $bin_path/$1)
}
function parse_export {
    echo 'export PATH="$PATH:'$1'"'
}
function in_array {
    [[ " $2 " =~ " $1 " ]] && echo 1 || echo 
}
function call {
    echo $(. $base_path/arc $@)
}
function rmkdir {
    delete $1
    mkdir -m 777 -p "$1"
}