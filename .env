#!/bin/bash


# Paths
init_path=$(pwd)
base_path="$(realpath $(dirname "$(test -L "$0" && readlink "$0" || echo "$0")"))"
paths=(
    bash_path="$base_path/basharc.d"
    bin_path="$base_path/bin"
    php_path="$base_path/php"
    commands_path="$base_path/commands"
    functions_path="$base_path/functions"
    services_path="$base_path/services"
    temp_path="$base_path/temp"
    web_path="$base_path/web"
)
for path in "${paths[@]}"; do eval $path; sudo mkdir -p "${path[@]:$(echo `expr index "$path" =`)}"; done

# Variables
client=$(whoami)
is_root=$([ "$client" == "root" ] && echo 1 || echo )
command="$(basename $0)"
arguments=(${@:1})


# Exportar comando global
bash_file="$base_path/basharc"
if [[ ! -f "$bash_file" ]]; then
$(delete $bash_file)
$(delete /etc/bash_completion.d/arcaela)
sudo echo "#!/bin/bash
export PATH=$bin_path:\$PATH
if [[ -d $bash_path ]]; then
    for file in $bash_path/*; do
        "'[[ -f $file ]] && . $file'"
    done
fi" >> $bash_file
$(link $bash_file /etc/bash_completion.d/arcaela)
sudo chmod -R 777 $bash_file
. $bash_file
fi
[[ ! -f "$bin_path/arc" ]] && $(add_bin arc "$base_path/arc")




# Functions
function confirm {
    local opt="n"
    local result=
    [[ ! -z $2 ]] && opt=$2
    read -p "$1 [$opt]: " result
    [[ -z $result ]] && result=$opt
    case $result in
        1|Y|S|y|s) echo 1 ;;
        *) echo "" ;;
    esac
}
function prompt {
    if [[ -z $2 ]]; then
        local str="$1"
    else
        local str="$1 [$2]: "
        local opt=$2
    fi
    read -p "$str" answer
    [[ -z $answer ]] && echo $opt || echo $answer
}
function path_go {
    [[ ! -z $2 ]] && from=$2 || from=$(pwd)
    echo $(sudo realpath --relative-to=$from $1)
}
function in_array {
    [[ " $2 " =~ " $1 " ]] && echo 1 || echo 
}
function rmkdir {
    delete $1
    sudo mkdir -m 777 -p "$1"
}
function void {
    echo "" >> /dev/null
}
function delete {
    sudo rm -rf $@
}
function link {
    delete $2
    sudo ln -s $@
}
function add_bin {
    echo $(link $2 $bin_path/$1)
}