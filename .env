#!/bin/bash
#Server
server_version=2.0
server_name="ServerManager"
server_git="arcaela/$server_name"

# Variables
client=$(whoami)
[[ $client == "root" ]] && is_root=1 || is_root=
current_path=$(pwd)
arg=$@
arg_array=($arg)
cmd=${arg_array[@]::1}
params="${arg_array[@]:1}"
namespace="${cmd[@]:2:`expr index "${cmd:2}" -`-1}"


# Path
paths=(
    bin_path=$base_path"/bin"
    package_path=$base_path"/package"
    php_path=$base_path"/php"
    resources_path=$base_path"/resources"
    script_path=$base_path"/script"
    views_path=$base_path"/views"
    web_path=$base_path"/web"
    temp_path=$base_path"/temp"
)
for path in "${paths[@]}"
do
    eval $path
    sudo mkdir -p "${path[@]:$(echo `expr index "$path" =`)}"
done


# Functions
function void {
    echo "" >> /dev/null
}
function quiet {
    $($@)
}
function _php {
    sudo php $php_path/index.php $@
}
function delete {
    rm -rf $@
}
function exist {
    [[ -f $1 || -d $1 ]] && echo 1 || echo 
}
function is_dir {
    [[ -d $1 ]] && echo 1 || echo 
}
function is_file {
    [[ -f $1 ]] && echo 1 || echo 
}
function link {
    $(ln -s $1 $2)
}
function path_go {
    [[ ! -z $2 ]] && from=$2 || from=$(pwd)
    echo $(realpath --relative-to=$from $1)
}
function merge_dir {
    rsync -r $@
}
function confirm {
    local opt="n"
    local result=
    [[ ! -z $2 ]] && opt=$2
    read -p "$1 [$opt]: " result
    [[ -z $result ]] && result=$opt
    case $result in
        1|Y|S|y|s) echo 1 ;;
        *) echo "" ;;
    esac
}
function prompt {
    if [[ -z $2 ]]; then
        local str="$1"
    else
        local str="$1 [$2]: "
        local opt=$2
    fi
    read -p "$str" answer
    [[ -z $answer ]] && echo $opt || echo $answer
}
function script {
    [[ -f "$script_path/$1" ]] && source "$script_path/$1"
}
function scandir {
    if [[ -d "$1" ]]; then
        echo $(ls -1 $1 | tr '\n' '\0' | xargs -0 -n 1 basename)
    else
        echo
    fi
}
