#!/bin/bash


# Variables
base_path="$(realpath $(dirname "$(test -L "$0" && readlink "$0" || echo "$0")"))"
current_path=$(pwd)
pcmd="$(basename $0)"
command=${@:1:1}
params="${@:2}"
namespace="${command:2:`expr index "${command:2}" -`-1}"

client=$(whoami)
[[ $client == "root" ]] && is_root=1 || is_root=

# Path
paths=(
    helper_path=$base_path"/helper"
    php_path=$base_path"/php"
    script_path=$base_path"/script"
    services_path=$base_path"/services"
    temp_path=$base_path"/temp"
    web_path=$base_path"/web"
)
for path in "${paths[@]}"
do
    eval $path
    sudo mkdir -p "${path[@]:$(echo `expr index "$path" =`)}"
done


# Functions
function void {
    echo "" >> /dev/null
}
function _php {
    sudo php $php_path/index.php $@
}
function delete {
    sudo rm -rf $@
}
function link {
    $(ln -s $1 $2)
}
function path_go {
    [[ ! -z $2 ]] && from=$2 || from=$(pwd)
    echo $(realpath --relative-to=$from $1)
}
function confirm {
    local opt="n"
    local result=
    [[ ! -z $2 ]] && opt=$2
    read -p "$1 [$opt]: " result
    [[ -z $result ]] && result=$opt
    case $result in
        1|Y|S|y|s) echo 1 ;;
        *) echo "" ;;
    esac
}
function prompt {
    if [[ -z $2 ]]; then
        local str="$1"
    else
        local str="$1 [$2]: "
        local opt=$2
    fi
    read -p "$str" answer
    [[ -z $answer ]] && echo $opt || echo $answer
}
function scandir {
    if [[ -d "$1" ]]; then
        echo $(ls -1 $1 | tr '\n' '\0' | xargs -0 -n 1 basename)
    else
        echo
    fi
}
function add_bin {
    echo $(sudo ln -s $2 /usr/bin/$1)
}
function in_array {
    [[ " $2 " =~ " $1 " ]] && echo 1 || echo 
}


function call {
    echo $(. $base_path/arc $@)
}